schema_name,function_name,return_type,arguments,volatility,security,language,config_settings,function_comment
public,get_guest_event_messages,"TABLE(message_id uuid, content text, created_at timestamp with time zone, delivery_status text, sender_name text, sender_avatar_url text, message_type text, is_own_message boolean, source text, is_catchup boolean, channel_tags text[])","p_event_id uuid, p_limit integer DEFAULT 50, p_before timestamp with time zone DEFAULT NULL::timestamp with time zone, p_cursor_created_at timestamp with time zone DEFAULT NULL::timestamp with time zone, p_cursor_id uuid DEFAULT NULL::uuid",STABLE,SECURITY DEFINER,sql,"[""search_path=public, pg_temp""]","CANONICAL: Use this function for all guest messaging queries. Provides stable interface with proper delegation and type safety."
public,is_event_host,boolean,p_event_id uuid,VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Secure host access check with fixed search_path. Uses optimized indexes. Target: <1ms execution."
public,is_event_guest,boolean,p_event_id uuid,VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Check if authenticated user is an active (non-removed) guest of the specified event. FIXED: Now properly filters removed_at IS NULL."
public,can_access_event,boolean,p_event_id uuid,VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Check if authenticated user can access event as host or active guest. Updated to use corrected is_event_guest() function."
public,bulk_guest_auto_join,jsonb,"p_phone text DEFAULT NULL::text",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Bulk links an authenticated user to all their invited guest records by phone number. Called after login/signup to activate all event memberships. Returns status, linked_events[], and statistics."
public,guest_auto_join,jsonb,"p_event_id uuid, p_phone text",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Securely links an authenticated user to their invited guest record by phone number. Returns status: linked, already_linked, not_invited, conflict, or error."
public,create_event_with_host_atomic,"TABLE(success boolean, event_id uuid, created_at timestamp with time zone, error_message text, operation text)",event_data jsonb,VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Atomically creates an event with host guest entry in a single transaction. Now supports sms_tag parameter for SMS header identification. Ensures data consistency and proper rollback on any failure."
public,get_user_events,"TABLE(id uuid, title text, event_date date, location text, role text, rsvp_status text, is_host boolean)","user_id_param uuid DEFAULT auth.uid()",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Returns events for a user with corrected search_path syntax and removed_at filtering."
public,resolve_message_recipients,"TABLE(guest_id uuid, phone text, guest_name text, display_name text, can_receive_sms boolean, sms_opt_out boolean, recipient_type text)","msg_event_id uuid, target_guest_ids uuid[] DEFAULT NULL::uuid[], target_tags text[] DEFAULT NULL::text[], require_all_tags boolean DEFAULT false, target_rsvp_statuses text[] DEFAULT NULL::text[], include_declined boolean DEFAULT false",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Resolve message recipients based on targeting criteria. UPDATED: Now uses declined_at instead of rsvp_status for RSVP filtering. Phase 1 of rsvp_status removal."
public,update_scheduled_message,jsonb,"p_message_id uuid, p_content text, p_send_at timestamp with time zone, p_message_type message_type_enum, p_target_all_guests boolean DEFAULT NULL::boolean, p_target_guest_ids uuid[] DEFAULT NULL::uuid[], p_target_guest_tags text[] DEFAULT NULL::text[], p_send_via_sms boolean DEFAULT NULL::boolean, p_send_via_push boolean DEFAULT NULL::boolean",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]",
public,guest_decline_event,jsonb,"p_event_id uuid, p_decline_reason text DEFAULT NULL::text",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Atomic guest decline: sets declined_at = now(), stores reason (optional), and sets sms_opt_out = TRUE. Idempotent operation."
public,guest_rejoin_event,jsonb,p_event_id uuid,VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Atomic guest rejoin: clears declined_at and decline_reason, sets sms_opt_out = FALSE. Idempotent operation."
public,handle_sms_delivery_error,json,"p_phone text, p_error_code text, p_error_message text DEFAULT NULL::text",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Handles SMS delivery errors by auto-setting sms_opt_out for carrier-level blocks and opt-outs."
public,handle_sms_delivery_success,json,p_phone text,VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Handles successful SMS delivery by clearing carrier opt-out markers for re-enabled numbers."
public,upsert_event_reminder,jsonb,"p_event_id uuid, p_timeline_id uuid, p_enabled boolean",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Creates, updates, or cancels 1-hour reminders for event schedule items. Host-only access."
public,build_event_reminder_content,text,"p_sub_event_title text, p_start_at_utc timestamp with time zone, p_event_timezone text, p_event_id uuid",VOLATILE,SECURITY DEFINER,plpgsql,"[""search_path=public, pg_temp""]","Builds SMS content for 1-hour event reminders: [Reminder Â· 1 hr] Title at Time{ at Location}. STOP text added automatically by SMS system."
