name: Bundle Budget
on:
  pull_request:
    paths:
      - 'app/**'
      - 'components/**'
      - 'hooks/**'
      - 'lib/**'
      - 'package.json'
      - 'next.config.ts'
      - 'tailwind.config.ts'
  push:
    branches: [main]
    paths:
      - 'app/**'
      - 'components/**'
      - 'hooks/**'
      - 'lib/**'
      - 'package.json'
      - 'next.config.ts'
      - 'tailwind.config.ts'

jobs:
  budget:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build with output capture
        run: pnpm build:ci
        
      - name: Check bundle budget
        id: bundle-check
        run: pnpm bundle:check
        
      - name: Comment PR with bundle info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            
            // Try to read bundle size info
            let bundleInfo = 'Bundle size check completed';
            try {
              if (fs.existsSync('.next/bundle-baseline.json')) {
                const baseline = JSON.parse(fs.readFileSync('.next/bundle-baseline.json', 'utf8'));
                bundleInfo = `📦 **Bundle Size**: ${baseline.firstLoadJS.toFixed(1)} KB\n\n`;
                
                if (baseline.firstLoadJS > 500) {
                  bundleInfo += '⚠️ Bundle size exceeds 500 KB guidance\n';
                } else {
                  bundleInfo += '✅ Bundle size within 500 KB target\n';
                }
                
                bundleInfo += `\n💡 Run \`ANALYZE=true npm run build\` locally to analyze bundle composition`;
              }
            } catch (error) {
              console.log('Could not read bundle info:', error.message);
            }
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('Bundle Size') && 
              comment.user.login === 'github-actions[bot]'
            );
            
            // Create or update comment
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: bundleInfo
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: bundleInfo
              });
            }
            
      - name: Upload bundle artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-${{ github.sha }}
          path: |
            .next/build-output.txt
            .next/bundle-baseline.json
          retention-days: 7
